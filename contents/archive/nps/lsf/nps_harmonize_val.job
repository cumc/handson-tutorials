#! /bin/sh

#####
# Load qctool module here

# (Broad institute)
# source /broad/software/scripts/useuse
# use .qctool-2.0-rc2

QCTOOL=qctool

# (erisone.partners.org)
# module add glibc
# module add gcc/6.3.0 

# QCTOOL=~/Tools/qctool_v2.0.1/qctool_v2.0.1

#####
if [ $# != 5 ]; then 
    echo "Usage: nps_harmonize_val.job npsdatadir bgen_file_path bgen_sample_file workdir cohort_name" 
    echo "Use with bsub -J jobname[1-22]"
    exit 1
fi 

NPS_WORK_DIR=$1
GENOPATH_BASE=$2
BGEN_SAMPLE_FILE=$3
OUTPUT_DIR=$4
NAME=$5

CHROM=$LSB_JOBINDEX
summstat="$NPS_WORK_DIR/harmonized.summstats.txt"

if [ ! -s "$summstat" ]; then 
    echo "ERROR: summary statistics file does not exist: $summstat"
    exit 1
fi

if [ ! -s "$BGEN_SAMPLE_FILE" ]; then 
    echo "ERROR: bgen sample file does not exist: $BGEN_SAMPLE_FILE"
    exit 1
fi

N=`tail -n +3 $BGEN_SAMPLE_FILE |wc -l`

echo "N=$N"
echo "chrom $CHROM"

total=`tail -n +2 $summstat | grep -w "^chr$CHROM" | wc -l`

echo "summary statistics M=$total SNPs"

GENOPATH=`echo $GENOPATH_BASE | sed "s/\#/$CHROM/"`
DOSAGE_IN_GZFILE="$OUTPUT_DIR/chrom$CHROM.dosage.gz"

if [ ! -s "$DOSAGE_IN_GZFILE" ]; then 

    echo "bgen: $GENOPATH"

    if [ ! -s $GENOPATH ]; then 
	echo "ERROR: bgen file does not exist: $GENOPATH"
	exit 1
    fi

    echo "Converting bgen to dosage format..."

    $QCTOOL -g $GENOPATH -s $BGEN_SAMPLE_FILE -ofiletype dosage -og $DOSAGE_IN_GZFILE

    if [ $? != 0 ]; then 
	echo "ERROR: qctool failed: $QCTOOL"
	exit 1
    fi 
    
    echo -n "Checking the integrity of dosage.gz file: $DOSAGE_IN_GZFILE ..."

    gzip -t $DOSAGE_IN_GZFILE

    if [ $? != 0 ]; then 
	echo "FAIL"
	echo "ERROR: qctool failed: $QCTOOL (broken gz)"
	exit 1
    fi 

    echo " OK"

else 

    echo "WARNING: $DOSAGE_IN_GZFILE already exists"


    echo -n "Checking the integrity of dosage.gz file: $DOSAGE_IN_GZFILE ..."

    gzip -t $DOSAGE_IN_GZFILE

    if [ $? != 0 ]; then 
	echo "FAIL"
	echo "ERROR: qctool failed: $QCTOOL (broken gz)"
	exit 1
    fi 

    echo " OK"
    echo "Reusing $DOSAGE_IN_GZFILE"
fi

if [ ! -d "$OUTPUT_DIR" ]; then
    echo "ERROR: directory does not exist: $OUTPUT_DIR"
    exit 1
fi 

OUT_PREFIX="$OUTPUT_DIR/chrom$CHROM.$NAME"
DOSAGE_OUT_FILE="$OUT_PREFIX.dosage.txt"
DOSAGE_OUT_GZFILE="$OUT_PREFIX.dosage.gz"

# pos a1 a2 
tail -n +2 $summstat | grep -w "^chr$CHROM" | awk '{ print( " " $2 " " $3 " " $4 " " ) }' > $OUT_PREFIX.RefAlt

# pos a2 a1
tail -n +2 $summstat | grep -w "^chr$CHROM" | awk '{ print( " " $2 " " $4 " " $3 " " ) }' > $OUT_PREFIX.AltRef

zcat < $DOSAGE_IN_GZFILE | head -n 1 > $OUT_PREFIX.header.txt

zgrep -F -f $OUT_PREFIX.RefAlt $DOSAGE_IN_GZFILE > $DOSAGE_OUT_FILE

echo -n "Checking if $GENOPATH and $DOSAGE_OUT_FILE are sorted by SNP position..."

sort -c -T $OUTPUT_DIR -t' ' -k 4n,4 $DOSAGE_OUT_FILE

if [ $? != 0 ]; then 
    echo "FAIL"
    exit 1
fi

echo "OK"

## "\t position \t alleleA \t alleleB \t"
cat $DOSAGE_OUT_FILE | cut -f1-6 -d' ' | awk '{print("\t" $4 "\t" $5 "\t" $6 "\t")}' > $OUT_PREFIX.nonmissing

lines=`cat $OUT_PREFIX.nonmissing | wc -l`

echo "validation cohort M=$lines SNPS"

# Check allele flips
zgrep -F -f $OUT_PREFIX.AltRef $DOSAGE_IN_GZFILE > $OUT_PREFIX.allele_flip

M_FLIP=`cat $OUT_PREFIX.allele_flip | wc -l`

if [ $M_FLIP -gt 0 ]; then 
    echo "ERROR: allele flips at $M_FLIP SNPs"
    echo "See $OUT_PREFIX.allele_flip"
    exit 1
fi

if [ $lines -lt $total ]; then

    M_fill=$(expr $total - $lines )

    echo -n "Filling in zeroes at $M_fill SNPs..."

    tail -n +2 $summstat | grep -w "^chr$CHROM" | grep -v -F -f $OUT_PREFIX.nonmissing | awk -v N=$N -v CHROM=$CHROM '{ printf("NA %d:%d_%s_%s %d:%d_%s_%s %d %s %s", CHROM, $2, $3, $4, CHROM, $2, $3, $4, $2, $3, $4); i = 0; while (i++ < N) { printf ("%s", " 0") } print(""); }' > $DOSAGE_OUT_FILE.zerofill

    echo "OK"

    echo -n "Merging..."

    sort -m -T $OUTPUT_DIR -t' ' -k 4n,4 $DOSAGE_OUT_FILE $DOSAGE_OUT_FILE.zerofill > $DOSAGE_OUT_FILE.merged

    if [ $? != 0 ]; then 
	echo "FAIL"
	exit 1
    fi

    echo "OK"

    rm "$DOSAGE_OUT_FILE"
    mv "$DOSAGE_OUT_FILE.merged" "$DOSAGE_OUT_FILE"

    lines=`cat $DOSAGE_OUT_FILE | wc -l`

    echo "validation cohort M=$lines SNPS"

    if [ $lines != $total ]; then 
	echo "ERROR: The number of SNPs does not match $total"
	exit 1
    fi 
fi

echo -n "Compressing to $DOSAGE_OUT_GZFILE ..."

cat "$OUT_PREFIX.header.txt" "$DOSAGE_OUT_FILE" | gzip -c > $DOSAGE_OUT_GZFILE

echo "OK"

# final check
echo -n "Sanity check ..."

zcat < $DOSAGE_OUT_GZFILE | tail -n +2 | cut -f1-6 -d' ' | awk '{print(" " $4 " " $5 " " $6 " ")}' | paste $OUT_PREFIX.RefAlt - | tr " " ":" | awk '{ if ($1 != $2) print $0; }' > $OUT_PREFIX.mismatch_check

M_MISMATCH=`cat $OUT_PREFIX.mismatch_check | wc -l`

if [ $M_MISMATCH -gt 0 ]; then 
    echo "FAIL"
    echo "Cannot harmonize variant info for $M_MISMATCH SNPs"
    echo "See $OUT_PREFIX.mismatch_check"
    exit 1; 
fi

echo "OK"

rm $DOSAGE_OUT_FILE

echo "Done"
exit 0
